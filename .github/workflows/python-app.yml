name: Build and Release Executable

on:
  push:
    tags:
      - 'v*' # Trigger on tags like v1.0, v0.1.0, etc.
  workflow_dispatch: # Allows manual triggering from the GitHub UI

permissions:
  contents: write # Required to create releases and upload release assets

jobs:
  build-release:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # You can change this to your preferred Python version

      - name: Install PyInstaller
        run: pip install pyinstaller

      # If you have other dependencies, you might want to install them from a requirements.txt
      # - name: Install dependencies
      #   run: pip install -r requirements.txt

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --name ScoopUI ^
                      --onefile ^
                      --windowed ^
                      --icon=assets/icon.ico ^
                      main.py
        # Notes:
        # 1. This assumes 'main.py' is at the root of your repository.
        #    Adjust the path 'main.py' if your script is in a subdirectory (e.g., 'src/main.py').
        # 2. For the '--icon' option:
        #    - Create an 'assets' directory in your repository.
        #    - Place an icon file (e.g., 'icon.ico') inside the 'assets' directory.
        #    - If you don't have an icon, you can remove the '--icon=assets/icon.ico ^' line.

      - name: Upload executable artifact (optional, for debugging or use in other jobs)
        uses: actions/upload-artifact@v4
        with:
          name: ScoopUI-windows-executable
          path: dist/ScoopUI.exe # PyInstaller outputs to the 'dist' folder

      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/') # Ensure this runs only for tags
        with:
          files: dist/ScoopUI.exe # Path to the executable to upload
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is automatically provided by GitHub
